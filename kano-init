#!/bin/bash

# kano-init
#
# Copyright (C) 2014 Kano Computing Ltd.
# License: http://www.gnu.org/licenses/gpl-2.0.txt GNU General Public License v2
#
# A fun console script to set up Kanux
# 1) User name
# 2) White rabbit riddle
# 3) Startx
# 9) Reset
#

function usage
{
    echo "Usage: kano-init [stage|reset|newuser|deleteuser|singlemulti]"
    echo ""
    echo "    stage         The stage to start the init procedure from."
    echo "                  Values from 1 to 3 are supported."
    echo ""
    echo "    reset         Reset the kano-kit to it's initial state."
    echo ""
    echo "    newuser       Schedules a new user creation."
    echo ""
    echo "    deleteuser    Removes the current user during the next boot."
    echo ""
    echo "    singlemulti   Set autologin depending on number of users."
    echo ""

    exit "$1"
}

function clean_stdin()
{
    read -t 1 -n 10000 discard
}

function linebreak
{
    echo -ne "\n"
}

function set_autologin_console
{
    sed -r -i.bak "s|^(1:2345:respawn:/sbin/getty).+|\1 -n -o'-f $1' 38400 tty1|" /etc/inittab
    init q
}

function disable_autologin_console
{
    sed -r -i.bak "s|^(1:2345:respawn:/sbin/getty).+|\1 38400 tty1|" /etc/inittab
    init q
}

function set_autologin_gui
{
    # Set autologin in lightdm
    /usr/lib/arm-linux-gnueabihf/lightdm/lightdm-set-defaults --autologin "$1"
}

function disable_autologin_gui
{
    sed -i.bak '/^autologin-user/d' /etc/lightdm/lightdm.conf
}

function enable_lxde_autostart
{
    # Enable the lightdm service
    update-rc.d lightdm enable 2 >/dev/null 2>/dev/null
}

function disable_lxde_autostart
{
    # Disable the lightdm service
    update-rc.d lightdm disable 2 >/dev/null 2>/dev/null
}

function set_autostart_stage
{
    sed -i "s/^\(STAGE\=\)[0-9]$/\1$1/" /etc/profile.d/autostart-kano-init.sh
}

function get_option
{
    while true; do
        clean_stdin
        read -p "Your choice: " -e option
        option=${option:0:1}
        eval "$1=\"$option\""
        if [ -z "$option" ]; then
            typewriter_echo "You need to choose one option. Which one do you pick:" 0 1 1 1
        elif [ -z "`grep "^[123]$" <<<"$option"`" ]; then
            typewriter_echo "The options are 1, 2, or 3. Which one do you pick:" 0 1 1 1
        else
            break
        fi
    done
}

# params:
#   $1: Number of characters to use to pad
function add_character_padding
{
    string=""
    for (( i=0; i<=$1 ; i++ )); do
        string+=" "
    done
    echo "${string}"
}

# new user kano-init setup
function newuser
{
    set_autologin_console "root"
    set_autostart_stage 1
    disable_lxde_autostart
    echo "kano-init scheduled for the next system reboot"
}

# setting up single-user / multiple-user mode
function singlemulti
{
    number_of_users=`kano-usertools number`

    if [ $number_of_users -eq 0 ]; then
        newuser

    elif [ $number_of_users -eq 1 ]; then
        username=`kano-usertools firstuser`
        set_autologin_console "$username"
        set_autologin_gui "$username"
        enable_lxde_autostart

    else
        disable_autologin_console
        disable_autologin_gui
        enable_lxde_autostart
fi
}

# start
# Check for root priviledges.
if [ `id -u` -ne 0 ]; then
    echo "Error: kano-init must be executed with root privileges" 1>&2
    exit 1
fi

if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    usage 0
fi



# add new user mode
if [ "$1" == "newuser" ]; then
    newuser
    exit 0
# single-multi user autoconfig
elif [ "$1" == "singlemulti" ]; then
    singlemulti
    exit 0
# delete a single user
elif [ "$1" == "deleteuser" ]; then
    # Add user name to the end of autostart-kano-init.sh script
    echo "#$2" >> /etc/profile.d/autostart-kano-init.sh
    set_autologin_console "root"
    set_autostart_stage 8
    number_of_users=`kano-usertools number`
    if [ $number_of_users -ne 2 ]; then
        disable_lxde_autostart
    fi
    exit 0
# reset: delete all users and trigger init
elif [ "$1" == "reset" ]; then
    set_autologin_console "root"
    set_autostart_stage 9
    disable_lxde_autostart
    echo "kano-init RESET scheduled for the next system reboot"
    exit 0
fi

# Get the resources directory
if [ -d "ascii_art" ]; then
    res_dir="."
else
    res_dir="/usr/share/kano-init/"
fi

# Disable Ctrl+C, Ctrl+D, Ctrl-S, Ctrl-Q in the console
stty intr undef
stty eof '?'
stty -ixon
stty susp undef

# checking parameters
stage=1
if [ -n "$1" ]; then
    if [ -n "`grep [12389] <<<"$1"`" ]; then
        stage="$1"
    else
        echo "Error: Unknown parameter '$1'"
        exit 1
    fi
fi

clear
sleep 1

whitespace=`add_character_padding 3`

# delete user
if [ "$stage" -eq 8 ]; then
    kano-usertools deleteuser
    number_of_users=`kano-usertools number`
    if [ $number_of_users -eq 0 ]; then
        # Create a user
        set_autostart_stage 1
        stage=1
    elif [ $number_of_users -eq 1 ]; then
        username=`kano-usertools firstuser`
        set_autologin_console "$username"
        set_autologin_gui "$username"
        enable_lxde_autostart
        set_autostart_stage 0
        exit 0
    else
        disable_autologin_console
        disable_autologin_gui
        enable_lxde_autostart
        set_autostart_stage 0
        exit 0
    fi
fi

# reset
if [ "$stage" -eq 9 ]; then
    kano-usertools deleteallusers
    set_autostart_stage 1
    stage=1
fi

# test case for failed SD-card writing of temporary user name
if [ `kano-usertools testname` -eq 0 ]; then
    set_autostart_stage 1
    stage=1
fi

# Run the matrix animation for 10 seconds and show the Judoka face
$res_dir/matrix.py 4 "yes"

# [Stage 1] Name: Request user name and create user
if [ "$stage" -le 1 ] && [ `kano-usertools testname` -ne 1 ]; then
    clear
    clean_stdin
    typewriter_echo "Hello!" 0 1 1 1 1
    typewriter_echo "I'm KANO. Thanks for bringing me to life." 0.5 2 0 1
    typewriter_echo "What should I call you?" 0 1 0 1

    # Read the username
    while true; do
        clean_stdin
        read -p "Your name: " -e username

        # username empty
        if [ -z "$username" ]; then
            typewriter_echo "Type a cool name." 0 1 1 1
        # invalid characters
        elif [ -z "`grep "^[a-zA-Z0-9]\+$" <<<"$username"`" ]; then
            typewriter_echo "Just one word, letters or numbers! Try again." 0 1 1 1
        # already taken
        elif [ -n "`grep "^$username\:" /etc/passwd`" ]; then
            typewriter_echo "This one is already taken! Try again." 0 1 1 1
        # too long
        elif [ ${#username} -gt 25 ]; then
             typewriter_echo "This one is too long by "`expr ${#username} - 25`" characters! Try again." 0 1 1 1
        # OK
        else
            break
        fi
    done
    # save username to temp file
    `kano-usertools savename $username`

    set_autostart_stage 2
else
    username=`kano-usertools loadname`
    typewriter_echo "Where was I $username? All right, I remember!" 0.5 1 1 0 1
fi

# creating user
kano-usertools createuser
if [ $? -ne 0 ]; then
    echo "Something happened with user creation"
    exit 1
fi

# setting up single-multi user
singlemulti

# [Stage 2] Riddle: White rabbit riddle
numFails=0
if [ "$stage" -le 2 ]; then
    $res_dir/rabbit.py 1
    clear
    clean_stdin

    linebreak
    typewriter_echo "$username, follow the white rabbit... " 0.5 1 1 1 1
    typewriter_echo "He's hiding in my memory. Can you find him?" 0.5 1 1 1 1
    typewriter_echo "Type 'cd rabbithole'" 0.5 2 1 0 1

    mkdir -p /home/$username/rabbithole
    sudo -u "$username" -H bash --init-file $res_dir/subshellrc
    rm -rf /home/$username/rabbithole

    $res_dir/matrix.py 3 "no"

    $res_dir/rabbit.py 1

    clear
    linebreak
    typewriter_echo "$username, it was a trap!" 2 1 1 1 1

    set_autostart_stage 3
fi

# disable kano-init
set_autostart_stage 0

# flush disk cache to system disk
# TODO: this call takes far too long, although it is needed
# to avoid corruption, not sure if it is worthy
# sync

# startx
if [ "$stage" -le 3 ]; then
    while true; do
        clean_stdin
        python -B $res_dir/bomb.py "$username"
        rv=$?

        clear
        if [ $rv -ne 0 ]; then
            sleep 1
            typewriter_echo "Try again!" 2 0 1 0 1
        else
            break
        fi
    done
fi

# disabling Ctrl keys and XON/XOFF
stty intr ^C
stty eof ^D
stty -ixon

# Start LXDE
service lightdm start
