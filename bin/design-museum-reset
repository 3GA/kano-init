#!/usr/bin/env python

# design-museum-reset
#
# Copyright (C) 2016 Kano Computing Ltd.
# License: http://www.gnu.org/licenses/gpl-2.0.txt GNU GPL v2
#
# This is the inactivity-based reset of the OS for the Design Museum Expo.
# The script is executed with sudo and reboots if the wipe was successful.


import os
import shutil
import sys

from kano.utils import get_user_unsudoed


def main():
    user_dir_path = os.path.join('/home', get_user_unsudoed())

    try:
        delete_user_save_files(user_dir_path)
        reset_profile_app_vars(user_dir_path)
        delete_system_logs(user_dir_path)
        reset_overworld_savefile(user_dir_path)
        reset_overworld_thumbnail(user_dir_path)
    except:
        return 1

    # Exit cleanly
    return 0


def delete_user_save_files(user_dir_path):
    app_dirs = [
        os.path.join(user_dir_path, 'Make-Apps-content'),
        os.path.join(user_dir_path, 'Minecraft-content'),
        os.path.join(user_dir_path, 'Draw-content'),
        os.path.join(user_dir_path, 'Pong-content'),
        os.path.join(user_dir_path, 'Snake-content'),
        os.path.join(user_dir_path, 'Light-content'),
        os.path.join(user_dir_path, 'Music-content'),
        os.path.join(user_dir_path, 'Terminal-Quest-content'),
        os.path.join(user_dir_path, '.linux-story'),
        os.path.join(user_dir_path, 'Scratch'),
        os.path.join(user_dir_path, 'Screenshots'),
    ]
    delete_dir_paths(app_dirs)


def reset_profile_app_vars(user_dir_path):
    profile_dirs = [
        os.path.join(user_dir_path, '.kanoprofile/apps'),
        # os.path.join(user_dir_path, '.kanoprofile/tracker'),  # TODO: keep or remove?
    ]
    delete_dir_paths(profile_dirs)


def delete_system_logs(user_dir_path):
    log_dirs_paths = [
        '/var/log',
        '/root/.kano-logs',
        os.path.join(user_dir_path, '.kano-logs'),
        os.path.join(user_dir_path, '.cache/lxsession/LXDE/run.log'),
    ]
    delete_dir_paths(log_dirs_paths)


def delete_dir_paths(dir_paths):
    for dir_path in dir_paths:
        print "I should delete {}".format(dir_path)
        if os.path.isdir(dir_path):
            # print "I should delete {}".format(dir_path)
            shutil.rmtree(dir_path)


def reset_overworld_savefile(user_dir_path):
    new_savefile_path = os.path.join(user_dir_path, '.kano-overworld/savefile-data.lua')
    save_dir_path = os.path.join(
        user_dir_path, '.local', 'share', 'love', 'kanoOverworld', 'sync'
    )

    # print "I should reset overworld with {} and put it at {}".format(
    #     new_savefile_path, save_dir_path
    # )
    shutil.copy(new_savefile_path, save_dir_path)


def reset_overworld_thumbnail(user_dir_path):
    new_savefile_path = os.path.join(user_dir_path, '.kano-overworld/lastPosition.png')
    save_dir_path = os.path.join(user_dir_path, '.local', 'share', 'love', 'kanoOverworld')

    # print "I should reset overworld with {} and put it at {}".format(
    #     new_savefile_path, save_dir_path
    # )
    shutil.copy(new_savefile_path, save_dir_path)


if __name__ == '__main__':
    sys.exit(main())
